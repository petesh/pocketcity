
VPATH=../source

include Makefile-include
include ../Makefile-GlobalEntries

# Platform specific files:

OBJECTS := $(OBJECTS_CARELESS) stack.o simcity.o \
	HiRes.o palmutils.o \
	palm_locking.o beam.o \
	sony_support.o mem_compat.o pocketcity-sections.o \
	options.o map.o budget.o query.o savegame.o repeathandler.o \
	minimap.o \
	savegame_be.o

BUILDENDS=nd d nd5 d5 nds ds dc
BUILDDIRS:=$(BUILDENDS:%=out-%)

DEBUG := 0
HIRES := 0
SONY := 0

# Multi language support - game-$(LANGUAGES).stm
LANGUAGES := EN

DESTOBJS = $(OBJECTS:%=$(OBJDIR)/%)
PRCTARGETS = $(LANGUAGES:%=$(OBJDIR)/$(BINARY)-%.prc)

LANGDIRS = $(LANGUAGES:%=(OBJDIR)/%)

.PHONY: all debug clean cheat hires dhires
.PRECIOUS: %.ro $(OBJDIR)/%-lang $(OBJDIR)/%-lang/game.ro \
		$(OBJDIR) .temp-%

TEMPENDS=$(LANGUAGES)
TEMPDIRS:=$(TEMPENDS:%=.temp-%)

#
# make all
#

lores dlores llores palm5 dpalm5 lpalm5 sony dsony lsony: $(PRCTARGETS)

nearlylive: lores palm5 sony

debug: dlores dpalm5 dsony

logdebug: llores lpalm5 lsony

#
# make cheat
#
cheat: CFLAGS += -DCHEAT
cheat: dlores

##################
### make debug ###
##################

# you can add: -DMEM_DEBUG to add logging of most palm memory allocation calls
# -mdebug-labels

dlores dpalm5 dsony: AXCFLAGS = -g -DDEBUG
dlores dpalm5 dsony: DEBUG=1

llores lpalm5 lsony: AXCFLAGS = -g -DDEBUG -DLOGGING
llores lpalm5 lsony: DEBUG=1

palm5 dpalm5: BXCFLAGS = -DPALM_HIGH -DPALM_FIVE
palm5 dpalm5: HIRES=1

# Sony app also contains all the hires functionality
sony dsony: CXCFLAGS = -DSONY_CLIE -DSONY_HIGH -DPALM_HIGH -DPALM_FIVE
sony dsony: SONY=1

CFLAGS += $(AXCFLAGS) $(BXCFLAGS) $(CXCFLAGS) -DPROGTOKEN="'$(PROGTOKEN)'"

# the different language versions
$(OBJDIR)/$(BINARY)-%.prc: $(OBJDIR) $(OBJDIR)/PocketCity-EN \
		$(OBJDIR)/%-game.ro
	$(BUILDPRC) -o $@ -n $(PROGNAME) -c $(PROGTOKEN) pcity.def \
		$(OBJDIR)/PocketCity-EN $(OBJDIR)/$*-game.ro version.ro touch.ro

$(OBJDIR)/pocketcity-sections.o: $(OBJDIR)/pocketcity-sections.s
	$(CC) -c $< -o $@

$(OBJDIR)/pocketcity-sections.s $(OBJDIR)/pocketcity-sections.ld: pcity.def
	$(MULTIGEN) -b $(OBJDIR)/pocketcity-sections pcity.def

# Language
$(OBJDIR)/%-game.ro: $(OBJDIR) game.rcp langs.rcp \
		game.rcp langs.rcp simcity_resconsts.h graphic/pcity.bmp \
		graphic/pcity-hd.bmp graphic/pcity-color.bmp \
		graphic/pcity-color-hd.bmp \
		graphic/pcitysmall.bmp graphic/pcitysmall-hd.bmp \
		graphic/pcitysmall-color.bmp graphic/pcitysmall-color-hd.bmp
	$(AWK) -v DEBUG=$(DEBUG) -v HIRES=$(HIRES) \
		-v SONY=$(SONY) -f filter.awk \
		game.rcp > $(OBJDIR)/$*-ngame.rcp
	$(RC.rcp) -L $* $(OBJDIR)/$*-ngame.rcp $(OBJDIR)/$*-game.ro

$(OBJDIR)/%-lang:
	mkdir -p $@

#
# actual source
#

$(OBJDIR):
	@-[ -d "$@" ] || mkdir -p $@

$(OBJDIR)/PocketCity-EN: $(OBJDIR) $(DESTOBJS)
	$(CC) $(CFLAGS) $(LDFLAGS) $(DESTOBJS) -o $@ $(LDLIBS) \
		$(OBJDIR)/pocketcity-sections.ld

$(OBJDIR)/beam.o: beam.c beam.h palmutils.h mem_compat.h simcity.h \
	savegame_be.h logging.h simcity_resconsts.h
	$(CC) $(CFLAGS) -c $< -o $@

beam.h: appconfig.h sections.h

budget.h: sections.h

$(OBJDIR)/budget.o: budget.c budget.h palmutils.h simcity.h simcity_resconsts.h \
	globals.h logging.h ui.h simulation.h resCompat.h repeathandler.h
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/HiRes.o: HiRes.c logging.h simcity.h resCompat.h palmutils.h
	$(CC) $(CFLAGS) -c $< -o $@

map.h: sections.h

$(OBJDIR)/map.o: map.c map.h simcity.h locking.h logging.h ui.h globals.h \
	drawing.h resCompat.h palmutils.h simcity_resconsts.h
	$(CC) $(CFLAGS) -c $< -o $@

mem_compat.h:

$(OBJDIR)/mem_compat.o: mem_compat.c mem_compat.h
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/minimap.o: minimap.c minimap.h zakdef.h globals.h simcity.h ui.h \
	logging.h resCompat.h
	$(CC) $(CFLAGS) -c $< -o $@

options.h: sections.h

$(OBJDIR)/options.o: options.c options.h globals.h simcity.h logging.h palmutils.h \
	simcity_resconsts.h
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/palm_locking.o: palm_locking.c locking.h globals.h mem_compat.h
	$(CC) $(CFLAGS) -c $< -o $@

palmutils.h: sections.h

$(OBJDIR)/palmutils.o: palmutils.c palmutils.h resCompat.h simcity_resconsts.h \
	simcity.h logging.h mem_compat.h
	$(CC) $(CFLAGS) -c $< -o $@

query.h: sections.h

$(OBJDIR)/query.o: query.c query.h palmutils.h simcity.h locking.h logging.h \
	simcity_resconsts.h zakdef.h simulation.h globals.h mem_compat.h
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/repeathandler.o: repeathandler.c repeathandler.h palmutils.h mem_compat.h
	$(CC) $(CFLAGS) -c $< -o $@

resCompat.h: sections.h sony_support.h

savegame.h: sections.h

$(OBJDIR)/savegame.o: savegame.c savegame.h
	$(CC) $(CFLAGS) -c $< -o $@

savegame_be.h: palmutils.h sections.h

$(OBJDIR)/savegame_be.o: savegame_be.c savegame_be.h
	$(CC) $(CFLAGS) -c $< -o $@

simcity.h: zakdef.h

$(OBJDIR)/simcity.o: simcity.c simcity.h savegame.h savegame_be.h \
	options.h map.h budget.h query.h resCompat.h palmutils.h \
	mem_compat.h minimap.h beam.h simcity_resconsts.h \
	logging.h locking.h  ui.h drawing.h handler.h globals.h \
	simulation.h disaster.h
	$(CC) $(CFLAGS) -c $< -o $@

sony_support.h: sections.h

$(OBJDIR)/sony_support.o: sony_support.c sony_support.h resCompat.h \
	palmutils.h logging.h
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/stack.o: stack.c stack.h mem_compat.h
	$(CC) $(CFLAGS) -c $< -o $@

#
# make clean 
#
clean:
	rm -f $(OBJDIR)/*.o $(OBJDIR)/*.s $(OBJDIR)/*.ld $(OBJDIR)/*.rcp \
		$(OBJDIR)/*.prc $(OBJDIR)/$(BINARY)-??
